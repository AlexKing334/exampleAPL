using System;

public delegate Padre Del(Figlio f);
public class Padre
{
    public Padre metodo1(Figlio f) { return new Figlio(); }
    public Figlio metodo2(Figlio f) { return new Figlio(); }
    public Padre metodo3(Padre p) { return new Padre(); }
}
public class Figlio : Padre { }
public class Test
{
    static void Main()
    {
        Padre p = new Padre();
        Figlio f = new Figlio();
        Del d1 = f.metodo1; //Caso in cui assegniamo al delegato un metodo con la stessa signature
        Del d2 = f.metodo2; //Si parla di covarianza quando assegniamo al delegato un metodo che restituisce un tipo più specifico
        Del d3 = f.metodo3; //Si parla di controvarianza quando assegniamo al d g d c “s c zz ” s q ch è richiesto in ingresso dal delegato.
        Del d=d1 + d2 + d3;
        d(f); //si mette il figlio altrimenti non va, vedi virtual
        p=d(f); //si mette il padre perche è meno speecifico
    }
}
